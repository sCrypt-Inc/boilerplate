// travelling salesman problem
contract TSP {

    int threshold;

    // 10 * 10 adjacent matrix repressentation
    int[NSQUARE] graph;
    static const int N = 10;
    static const int NSQUARE = 100;


    public function verify(int[N] path) {
        int sum = 0;

        // verify it traverses each vertex exactly once
        int i = 0;
        loop (N) {
            int j = 0;

            loop (N) {
                if (j > i && path[i] == path[j])
                    exit(false);
            
                j++;
            }

            i++;
        }

        i = 0;
        // calculate path length
        loop (N) {
            sum = sum + this.dist(i, (i + 1) % 10);
            i++;
        }

        require(sum <= this.threshold);
    }

    // distance between vertex i & j
    function dist(int i, int j): int {
        return this.graph[TSP.index(i, j)];
    }

    static function index(int i, int j) : int {
        return i * N + j;
    }
}