
/**
* A toy token sale
*/
contract TokenSale {
    // satoshis / token
    int price;

    static const int DataLen = 1;

    constructor(int price) {
        this.price = price;
    }

    public function buy(PubKey buyer, int numTokens, SigHashPreimage txPreimage) {
        // this ensures the preimage is for the current tx
        require(Tx.checkPreimage(txPreimage));

        // read previous locking script
        bytes lockingScript = SigHash.scriptCode(txPreimage);
        int oldBalance = SigHash.value(txPreimage);
        int newBalance = oldBalance + numTokens * this.price;

        // write new locking script

        bytes dataPart = buyer + num2bin(numTokens, DataLen);
        bytes codePart = lockingScript[: len(lockingScript) - 2];
        bytes lockingScript_ = codePart + Utils.writeVarint(dataPart);
        bytes output = Utils.buildOutput(lockingScript_, newBalance);
        require(hash256(output) == SigHash.hashOutputs(txPreimage));
        
    }
}
